# 1) 장고 업스트림
upstream django_server {
    server web:8000;  # docker-compose 서비스명:포트
    keepalive 16;
}

server {
    listen 80;
    # server_name _;  # 필요시 도메인 지정

    # 2) 정적/미디어
    location /static/ {
        alias /app/static/;
        access_log off;
        expires 7d;
    }
    location /media/ {
        alias /app/media/;  # 업로드 파일 쓰면 추가
        access_log off;
        expires 7d;
    }

    # 3) (선택) 웹소켓: Channels를 쓰면 업그레이드 라우트 분리
    #    프론트에서 ws://HOST/ws/... 로 붙는 경로에 맞추세요.
    location /ws/ {
        proxy_pass http://django_server;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_read_timeout 600s;
        proxy_send_timeout 600s;
    }

    # 4) 일반 HTTP 요청
    location / {
        proxy_pass http://django_server;
        proxy_redirect off;
        proxy_http_version 1.1;

        # 원본 정보 전달 (Django가 SECURE_PROXY_SSL_HEADER 등 쓸 때 도움)
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 업로드/스트리밍 안정성
        proxy_read_timeout 600s;
        proxy_send_timeout 600s;
        client_max_body_size 20m;  # 업로드 사이즈 필요시 조정
    }

    # (선택) 간단 압축
    gzip on;
    gzip_types text/plain text/css application/json application/javascript application/xml text/javascript;
    gzip_min_length 1024;
}
